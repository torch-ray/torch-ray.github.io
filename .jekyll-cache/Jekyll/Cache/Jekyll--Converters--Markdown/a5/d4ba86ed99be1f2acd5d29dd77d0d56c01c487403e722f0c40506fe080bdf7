I" <h2 id="백준---단어공부">백준 - 단어공부</h2>

<p><img width="1152" alt="스크린샷 2021-01-22 오전 8 20 38" src="https://user-images.githubusercontent.com/74946802/105424438-bf520d80-5c8a-11eb-8c50-8d463cdd2d88.png" /></p>

<p>알파벳 대소문자로 구성된 문자열이 주어지면 가장 많이 사용된 알파벳을 출력하면 된다. 대문자와 소문자는 구별하지 않는다. 가장 많이 사용된 알파벳이 여러개일 경우에는 ?를 출력한다.</p>

<ul>
  <li>체크포인트: 출력은 반드시 대문자로한다.</li>
</ul>

<h2 id="입력값-대문자변환-및-빈-딕셔너리-생성">입력값 대문자변환 및 빈 딕셔너리 생성</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="nv">n</span> <span class="o">=</span> <span class="nf">readLine</span><span class="p">()</span><span class="o">!.</span><span class="nf">uppercased</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">g</span> <span class="o">=</span> <span class="p">[</span><span class="kt">String</span> <span class="p">:</span> <span class="kt">Int</span><span class="p">]()</span>
</code></pre></div></div>
<p>대문자와 소문자를 구별하지 않고 알파벳을 카운팅해야 하기 때문에 입력받은 문자열을 모두 대문자로 만들어준다. 숫자나, 기호가 포함되어 있다면 문제가 생길 수 있지만 문제의 단서에 알파벳으로 구성된 문자열이라고 명시되어 있기 때문에 바로 대문자로 변환해도 문제가 없다. 입력받은 알파벳과 사용된 숫자를 저장할 빈 딕셔너리를 생성한다.</p>

<h2 id="알파벳-카운팅">알파벳 카운팅</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">n</span><span class="o">.</span><span class="n">forEach</span><span class="p">{</span>
  <span class="k">if</span> <span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span> <span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]</span><span class="o">=</span><span class="mi">1</span> <span class="p">}</span>
  <span class="k">else</span> <span class="p">{</span> <span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]?</span> <span class="o">+=</span> <span class="mi">1</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>입력값을 대문자로 변환하여 저장한 변수 n을 탐색하면서 딕셔너리에 사용된 횟수만큼 카운팅을한다. 예를들면 g[“M”]이 nil이면 1을 넣어주고 이미 g[“M”]에 값이 있다면 + 1을 해주는 방식이다.</p>

<h2 id="최대값-탐색">최대값 탐색</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">var</span> <span class="nv">result</span> <span class="o">=</span> <span class="p">[</span><span class="kt">String</span><span class="p">]()</span>
<span class="k">for</span> <span class="n">key</span> <span class="k">in</span> <span class="n">g</span><span class="o">.</span><span class="n">keys</span> <span class="p">{</span>
  <span class="k">if</span> <span class="n">g</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">==</span> <span class="n">g</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="nf">max</span><span class="p">()</span><span class="o">!</span> <span class="p">{</span> <span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)</span> <span class="p">}</span>
<span class="p">}</span>
<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">?</span> <span class="s">"?"</span> <span class="p">:</span> <span class="s">"</span><span class="se">\(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>
<p>결과값을 저장할 빈 배열을 만들어주고 알파벳과 사용된 횟수 정보가 담겨있는 딕셔너리를 탐색한다. “Mississipi”라는 문자열이 입력값으로 들어왔다고 가정하면, 현재 g[“M”]이라는 key에는 1이라는 value가 저장되어있다. 딕셔너리의 모든 key에 담겨있는 value를 최대값과 비교하며 최대값과 같은 경우 result변수에 저장한다. 그리고 result의 count가 1보다 큰 경우는 가장 많이 사용된 알파벳이 2개 이상이라는 의미이기 때문에 ?를 출력하고, 그렇지 않은 경우에는 result값을 출력한다.</p>

<h2 id="전체코드">전체코드</h2>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="nv">n</span><span class="o">=</span><span class="nf">readLine</span><span class="p">()</span><span class="o">!.</span><span class="nf">uppercased</span><span class="p">()</span>
<span class="k">var</span> <span class="nv">g</span><span class="o">=</span><span class="p">[</span><span class="kt">String</span><span class="p">:</span> <span class="kt">Int</span><span class="p">]()</span>
<span class="n">n</span><span class="o">.</span><span class="n">forEach</span><span class="p">{</span>
    <span class="k">if</span> <span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]</span> <span class="o">==</span> <span class="kc">nil</span> <span class="p">{</span><span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span><span class="n">g</span><span class="p">[</span><span class="kt">String</span><span class="p">(</span><span class="nv">$0</span><span class="p">)]?</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span>
<span class="p">}</span>
<span class="k">var</span> <span class="nv">result</span> <span class="o">=</span> <span class="p">[</span><span class="kt">String</span><span class="p">]()</span>
<span class="k">for</span> <span class="n">key</span> <span class="k">in</span> <span class="n">g</span><span class="o">.</span><span class="n">keys</span> <span class="p">{</span>
    <span class="k">if</span> <span class="n">g</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">==</span> <span class="n">g</span><span class="o">.</span><span class="n">values</span><span class="o">.</span><span class="nf">max</span><span class="p">()</span><span class="o">!</span> <span class="p">{</span><span class="n">result</span><span class="o">.</span><span class="nf">append</span><span class="p">(</span><span class="n">key</span><span class="p">)}</span>
<span class="p">}</span>
<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="o">.</span><span class="n">count</span><span class="o">&gt;</span><span class="mi">1</span> <span class="p">?</span> <span class="s">"?"</span> <span class="p">:</span> <span class="s">"</span><span class="se">\(</span><span class="n">result</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>
:ET